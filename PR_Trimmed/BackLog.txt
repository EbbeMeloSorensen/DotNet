Done:
* Skr�l solutionen ned, s� den ikke besk�ftiger sig med person associations
* Skr�l Person ned, s� den kun har first name og surname
* Man skal kune cleare historical time feltet for at komme tilbage til now..
* Hvis tidspunktet er midnat skal den ikke vise klokkesl�t i headeren, hverken for titlen eller parantesen nedenunder
* Lav det lige om med seeding, s� du bare skriver det fulde navn i FirstName i stedet for at bruge Surname
* Navn skal tilf�jes til detalje viewet
* Du har en fejl, n�r du k�rer med dette scenarie:
  1) Start med en tom database
  2) Lav en ny "person"
  3) S�t databasetid til et tidspunkt f�r personen blev lavet
  => Den forsvinder ikke fra listen
  Find kaldes hurtigere end du lige tror. Det skyldes, at den historiske tid justeres, da den jo ikke m� v�re nyere end database-tiden
  M�ske burde man operere med, at man IKKE skal kalde Find, hvis et tidspunkt justeres pga det andet tidspunkt.
  M�ske skulle man lade selve PARRET af tidspunkter v�re det, der �ndrede sig, og som der kan abonneres p�...
* G�r det s�dan at man kan g� tilbage i historisk tid og databasetid for dit eget plugin, som repr�senterer den lokale database
* G�r det s�dan at man kan g� tilbage i historisk tid og databasetid for dit eget plugin, som repr�senterer dit eget lokale API
* G�r det s�dan at man kan g� tilbage i historisk tid og databasetid for dfos pluginet
* Bug: Der er noget galt med tidsaksen, n�r der kun vises �r..
* Genaktiver AutoRefresh, hvor det giver mening
  - N�r man �ndrer p� historical time
  - N�r man �ndrer p� database time
* Der er lidt rod med mht hvordan statusfilteret virker - man skal f.eks. gerne kunne n�jes med de nedlagte
  - der er f.eks. en bug deri at Rey (alts� ikke Rey Skywalker) kommer med, n�r man beder om de d�de. Rey er jo alts� ikke d�d -
    hun har blot �ndret navn til Rey Skywalker.. Hvorfor sker det?
    -> Du siger, at du KUN vil have historiske objekter med, og det g�r s�, at du som de "historiske" predicates anf�rer,
       at du kun vil have varianter (bj�lker), hvor End ligger f�r historisk tid. Det g�lder for Rey, men jo alts� ikke for Rey Skywalker.
* Lav et view, hvor man kan se de varianter, der er for en given person
* Man skal kunne slette et antal varianter
* Retrospektivt filter - som bruger skal man ikke direkte kunne afgøre om selve sektionen er synlig - kun henholdsvis historisk tid og databasetid
* Man skal kunne lave en ny (historisk) variant
* Delete-knappen skal kun være mulig, hvis der for alle personer i ens selection gælder, at de har et åbent virkningstidsinterval.
* Du skal have en bedre ViewModel for de historiske (archived/inaktive) entiteter i personlisten, også så det er mere intuitivt, hvorfor man ikke
  altid kan slette dem
* Lav noget input validering, når man prøver at lave en person med et invalidt virkningstidsinterval
* Tilføj Category, Latitude og Longitude til CreatePersonViewModel

Todo:
* Dialogen CreateOrUpdatePerson skal opføre sig anderledes, når man bruger den til at ændre en eksisterende person
* Kombiner IDataErrorInfo med businessRuleCatalog som anvist af ChatGPT
  - Lav en ny mere kompakt dialog, hvor det nye princip er bærende (OK)
  - PeoplePropertiesViewModel, som håndterer Update, skal også bruge business rule kataloget frem for at lave sin egen validering
* Lad Start Date være mandatory i forbindelse med oprettelse af ny person
* Gør det muligt at slå business rules til og fra
* Bryd person properties viewet ned i et hierarki
* Det prospektivt at ændre en kommentar skal foregå på samme måde, som når man prospektivt ændrer en person, dvs med en Update knap
* Det skal ikke være muligt prospektivt at ændre et historisk objekt, dvs man skal f.eks ikke kunne ændre Darth Vader
* Når man har valgt mere end 1 person, skal der stå noget alla "shared properties of 3 selected people"
* Dæk alle use cases for vedligehold af comments
  - Create new
  - Create new variant
  - Prospectively update variant
  - Soft delete current comment
  - Hard delete historical comment
  - Lige som det gælder for historiske varianter af PERSONER, så bør det også gælde for historiske varianter af COMMENTS,
    at de er lette at finde, f.eks. så man kan udføre hard delete på dem. Derfor bør der også være et view, hvor man kan se
    alle varianter af en comment
* Hvis der kun er historiske personer i ens selection, så bør man kunne erase dem, dvs udføre hard delete
  - Erase person skal indebære, at alle varianter af pågældende person slettes
  - Først skal man sikre, at alle varianter af alle comments erases
  - Du skal have lavet (eller genfundet) den logik, der checker, om der er overlap mellem collections af tidsintervaller, så det bl.a.
    kan bruges til input validering
* Hvis der er både aktuelle og historiske personer i ens selection, så bør man ikke hverken kunne delete eller erase 
* Knapperne New og Delete for personer bør nok være under personlisten af hensyn til konsistens
* Der er noget rod med din Delete use case. Det bare at slette en person, havde du lavet ved at man bare terminerede sidste virkningstidsinterval.
  Det er det, man databaseteknisk kalder en "soft" delete. Alternativt kan man udføre en "hard" delete, hvor man faktisk superseder tingene.
  Systemet bør facilitere begge ting.
  Use Case wise så kan man vel sige, at det kun er meningsfyldt at lave en soft delete på en variant med et åbent virkningstidsinterval.
  Så det vil vel give mening at når man selecter sådanne varianter i brugergrænsefladen og trykker på delete, så er det faktisk en soft delete,
  der udføres. Den må til gengæld ikke udføres, hvis ens selection af personer omfatter historiske personer. I så fald skal der nok være en
  erase-knap
* Du skal have Auto Update på banen igen
  - det indebærer nok, at du skal have de der observable properties på banen igen, gerne list smart - sidst landede du jo på at have 2, dvs en,
    du bindede til fra kontrollerne og en anden, som så var observable. Det kunne være rart, hvis du kunne binde direkte til den der observable...
* Du skal kune sætte og bruge historic time of interest
* Du skal kune sætte og bruge database time of interest
* Du skal have de der time controls på banen igen
* Du skal nice time controls op, så datoen står under det første tick
* Når man laver en ny historisk variant, skal man få en fejl fra personrepositoryet hvis den overlapper med en eksisterende
  - der skal også laves input validering på brugergrænseflade niveau, så man undgår at gå hele vejen til databasen
* Man skal kunne opdatere en (historisk) variant


Skrammel med skrammel on top:
M�l: Tilbage p� det spor, der hedder at lave "version 2" af pr-applikationen, som skal kunne det samme som den gamle pr, 
     blot med bitemporalitet. Den kan ogs� passende h�ndtere glossaries, s� du kun skal deployere �n applikation

Todo:
* Hvad er det lige at du har gang i... du har en opgave om at dokumentere datamodellen. Meget konkret kan det passende foregå 
  ved at køre reverse engineering på databasen med datagrip. Så har du en ide om at du gerne vil beefe up på dine eksisterende
  værktøjer til det og i øvrigt brushe op på dine eksisterende datamodeller, f.eks. gode gamle C2IEDM.
  Din ide er generelt at beefe up på det her projekt, så det favner en hel masse forskellige datamodeller, hvoraf nogle er 
  bitemporale mens andre ikke er.


* Du skal KONSEKVENT returnere kloner fra facaden, medmindre det overrides
* For fuck mand... Hvis det her memento baserede shit virker, s� er det vel fordi facaden returnerer kopier snarere end de trackede objekter,
  og s� er der ligesom ikke noget rationale for at g�re det p� den m�de.
  M�ske er humlen snarere det, du fik lavet ved lidt af en tilf�ldighed med at facaden pr default returnerer kloner, men den kan v�lge
  i visse tilf�lde at returnere trackede objeker. S� bliver det heller ikke overengineered.


* Din ide er, at facaden lige konverterer de trackede objekter, som hentes fra repoet, til nogle, der ogs� kan b�re et memento.
  Mekanismen i EF Core er imidlertid, at man skal �ndre de TRACKEDE objekter for at det gemmes til repoet, s� det duer ikke at du bare smider dem v�k
  efter at have kopieret dem. Derimod b�r du nok gemme selve de trackede objekter i selve det wrappede objekt.
  Fuck, mand... det er sv�rt det her...
  Er det mon en mulighed at lade Find v�re styret af en parameter, s� man ikke n�dvendigvis wrapper dem?
  S� kunne man jo sige, at man ikke bruger den almindelige Find, n�r man henter r�kker blot for at stemple dem som f�rdige...
* I Update Collection testen �ndres den eksisterende r�kke ikke
* Hvis der er forskel mellem unit testen og wpf-applikationen kan det m�ske skyldes, at der er forskellige contexts i brug...
  
* Update.. du troede den virkede, men det g�r den vist ikke.. Scenariet er s�ledes:
  1) Hent en person fra repoet med Get
  2) �ndr personens navn
  3) Fodr den til repoet som en update
  -> S� starter den med at hente den eksisterende for at �ndre den, men den ER s� allerede �ndret.
  -> S� m� det vel v�re s�dan, at det, den skal returnere, skal v�re en KLON af den fra repoet... 
* Sikr, at use cases virker fra PR.UI.WPF
  - Create og update virker tilsyneladende, men n�r man s� starter applikationen op igen, er det der ikke.. reseeder den?
* Lav PR.UI.WPF som PR.UI.Console - s� plugin afh�nger af en konfigurationsfil
* KAN DU FOR HELVEDE IKKE INSPICERE EN DATABASE FRA SIA-MASKINEN??!!!
* F� dine unit tests op i sving
* Du er n�dt til at dokumentere PR_Trimmed - ellers blive det et vedligeholdelsesmareridt


In progress:
* F� lige de historieks linier p� plads igen. Knap s� mange denne gang m�ske.
* I DFOS API'et skal der v�re mulighed for at ignorere dem, hvor status er "nedlagt"
* Lidt flere karakterer p� banen
  - Leia Organa
  - Luke Skywalker
  - Han Solo
* For alle 3 plugins skal man kunne se detaljer i detaljeviewet
  - Man skal kunne se de 2 lokationer for Darth Vader, n�r man trykker p� detalje

Todo:
* Det skal highlights i kortet, hvilke observing facilities, der er selected
* Man skal ogs� kunne selecte observing facilities i kortet
* Man skal kunne se linier i historical view over hvor der er sket noget

L�st of fast:
Hold lige fast i, at det, du har gjort indtil videre, det er at lave et specielt plugin for dit PERSON repo,
s� det alts� bare er "personer", som man henter op. I den GUI, som du har pl�ffet on top, der opereres godt nok
med observing facilities, men det er s�dan set bare fordi du transformerer det til det for at kunne genbruge nogle
af de gamle user controls.
Det er stadig meningsfyldt, fordi du har haft lejlighed til at massere de dele af DFOS APIet, som vedr�rer retrospektion,
men hvad er vejen frem? Det b�r vel i vidt omfang v�re at lave version 2 af din prebsi-applikation. Det andet er i vidt 
omfang mission accomplished... men det kunne alts� v�re fint, hvis du havde mulighed for at inspicere de �ndringer,
der foretages pt...

L�st of fast:
* Find skal virke for disse cases (der skal v�re �kvivalens mellem repo og API):
  A) Arguments:
     - historical time: null 
     - include historical objects: no
     Expected: kun Chewbacca vises

  B) Arguments:
     - historical time: 01-01-2004 
     - include historical objects: no
     Expected: Chewbacca og Darth Vader vises
  
  C) Arguments:
     - historical time: null
     - include historical objects: yes
     Expected: Chewbacca og Darth Vader vises. Darth vader vises p� kortet som r�d
  
Kan du sige til dit eget API, at du vil have historiske personer med op?


Todo: F� det helt p� plads med VIEWING af historik. Editering kan vente
* N�r man indtaster tidspunkt i DatePicker-feltet s� g�r den i uendelig l�kke. Det m� skyldes, at den b�de �ndres ved bruger
  input og n�r man klikker nede p� linealen. L�s det gerne i samme stil som dengang du havde problemet med DMI.Data.Studio,
  hvor du kun laver en opdatering, hvis den faktisk er forskellig. M�ske er det nok med en guard i selve propertyen..
  Du b�r jo nok f� repareret SjovMedWigos, og i den forbindelse skal du have refaktoreret den, s� der tages h�jde for det med
  at mange af persistence-funktionerne er gjort asynkrone.....
  Well den kompilerer, og k�rer.. kom du omkring det?
  Kan man lave objekter med den? nopes..
  Hvad sker der, n�r man kalder RetrieveObjects - den k�rer igennem, men der er �benbart ikke nogen. Bliver der ikke seedet?
  Jo, der bliver seedet, men g�r det s� galt, n�r du retriever dem?
  Det er jo desv�re sv�rt at se i fucking databasen fra en sia maskine!!

  ........Tag lige 2 steps tilbage, tag en dyb ind�nding, og se, hvor du er.
  Du er ved at bygge frontends af forskellig art til DFOS APIet. Du har bygget en konsol-applikation, som virker fint.
  Der var i �vrigt en del arbejde i at lave methods i Craft.Persistence asynkrone, s� det b�de virkede, n�r det wrappede
  EF Core og ogs� et API...
  Efterf�lgende satte du dig for at lave en WPF baseret gui, der kunne g�re det samme. F�rst fik du den gode gamle
  PR-ting i spil, og derefter satte du dig for at tilpasse SjovMedWigos... Det sad du s� med fredag aften p� arbejdet
  og oplevede, at du ikke kunne lave en template for projektet
  S� gik du hjem og brugte en del tid i weekenden p� det og kom ogs� relativt langt, men s� oplever du fandengaleme,
  at du ikke kan bygge det p� din SIA-maskine, og endda, at den bare staller, n�r du pr�ver!!!
  Du have lige en hypotese om at det var fordi det var noget DotNet7, men det er SjovMEdWigos jo alts� OGS�!





Todo:
* Hvorfor vises Anakin, endda med r�d, n�r han jo har dateclosed i fortiden? Han vises i �vrigt ogs� i listen, hvilket han 
  heller ikke burde.
  -> Du sender jo ikke noget historisk tidspunkt ned, s� hvorfor kommer han overhovedet med op? Den g�r helt ned p� det nederste
     repo, dvs den er ikke wrappet af en versioned
* Lav det s�dan, at man fra konsol-applikationen kan tr�kke for real p� DFOS-APIet, s� man ikke tilsyneladende hiver personer
  men derimod observing facilities. De skal jo i �vrigt have et navn. Eller ogs� kunne du bare lave noget mapping, der er lidt
  mere clever - du kunne jo f.eks. tr�kke en observing facility fra DFOS og s� mappe den ind i et ANTAL Person objekter, hvor
  der jo s� gerne skulle v�re en pr detail...
  Udviklingsarbejdet kan passende foreg� p� Linux'en for konsol-applikationen, men n�r det s� virker, kan du passende k�re det 
  over p� WPF-applikationen og installere den p� DOIT-maskinen.
  Frem for at mappe det over i Person kunne du jo alts� ogs� s�tte en observing facility i s�en..
  mnjaaah du kunne alts� godt til en start udvide Person med at have lat long koordinater... selv om det lidt er noget svineri
  Til en start burde du alts� lige hive din kort-applikation ind, skr�lle den, og erstatte med "personer".
  PT s� dealer den jo i en hel masse, hvor der ogs� er child entiteter med... det skal skr�lles ud
  Refaktorer den der API-plugin s� det er mindre skrald-agtigt - rent faktisk b�r du jo nok lave en ekstra, som ikke tr�kker p�
  det s�dvanlige API men derimod p� DFOS

* Du b�r have VIRKNINGSTID med for personer, s� man ikke skal spole tilbage i tid for at se, hvad de f.eks. har heddet f�r.
  - Det skal nok v�re helt generelt, lige som det jo er for versioned object, s� det hurtigt kan skr�lles af, hvis man ikke
    er interesseret i virkningstid
  - Bem�rk, at det, du jo har indtil videre har f�et lavet med star wars karaktererne det essentielt er  et current situation system
  - N�r du laver systemet om, s� skal det vel v�re s�dan, at der er flere objekter i spil, som alle er g�ldende, og som repr�senterer
    samme objekt. F.eks. skal der v�re �t objekt, der repr�senterer Anakin i perioden f�r han blev Sith og et andet objekt, som 
    repr�senterer ham i perioden efter, hvor han i �vrigt hed Darth Vader. Det er jo alts� ikke s�dan helt lige til, for Person er jo 
    alts� en UAFH�NGIG entitet, s� hvordan skal man som bruger afklare, om 2 objekter med forskelligt ID repr�senterer samme person?
    Er man ikke reelt n�dt til at have et parent objekt, der n�rmest er tomt?.. Og er det ikke lige pr�cis det, der er tale om i WIGOS,
    hvor den entitet, der hedder AbstractEnvironmentalMonitoringFacility snart sagt ingen informationer har. For Person kunne man m�ske
    operere med en AbstractPerson. I DFOS g�r de vel egentlig det samme, hvor de effektivt opererer med, at en Observing Facility s�dan
    set bare er en samling af Details...
    ....De forskellige objekter har jo alts� samme objekt id, dvs det er ikke unikt, men effektivt g�lder der, at det i kombination
    med et virkningstidsinterval ikke m� overlappe med andre virkningstidsintervaller for samme objekt
* Hvorfor f�r vi kun en person op med konsolapplikationen men 2 med WPF'en?
  -> Den funktionalitet, hvor du plukker det ene objekt, der svarer til time of interest, det ligger indtil videre kun i
     metoden PersonRepositoryFacade.GetAll. Du skal nok g�re den konstruktion generelt anvendelig, s� du ogs� kan bruge den i Find
* Reparer Glossary, C2IEDM og WIGOS
  -> Glossary er sgu lidt d�d i det - nok bedre at indlemme den som sit eget dom�ne i PR
  -> Wigos er repareret men nok en smule vingeskudt og det samme g�lder formentlig for C2IEDM for

L�st og fast:
 Du er n�et dertil, at man som bruger af en IUnitOfWorkFactory i vidt omfang kan abstrahere fra,
 om det er en "almindelig" en af slagsen, eller om det er en "wrapper" af en almindelig en, der 
 opererer p� en database med versionshistorik.

 MEN.. hvis man opererer med en wrapper, er man ikke desto mindre n�dt til at sp�rge efter Object IDs
 snarere end bare Ids. Det kunne v�re fedt, hvis man helt og aldeles kunne sp�rge efter Ids, og der
 s� bare gjaldt, at n�r man opererede med en wrapper, s� spurgte den reelt efter ObjectIds.

 Du var ude i en overvejelse om, om man kunne lade et VersionedObject returnere sit object id frem for 
 sit id, n�r det blev spurgt, men det er sv�rt at gennemskue implikationerne

 Hvis man lavet s�dan en lidt sofistikeret property, hvordan vil databasen s� komme til at se ud?
 -> Det lader til at v�re fint.. Den skal bare have en Property, der er rigtig

 Hvilke komponenter skal tilg� ObjectId og hvorn�r?
 - PersonRepositoryFacade (Den dealer kun i versionerede dbs, s� den ved godt, at der b�de er et Id og et ObjectId)
 - De forskellige ViewModeller, f.eks. MainWindowViewModel, PeoplePropertiesViewModel og PersonListViewModel

 Kunne man s� ikke sige, at viewmodellerne ALTID bare sp�rger efter ID, og s� f�r de alts� bare et ObjectID,
 ude at de er skarpe p� det? Facaden derimod, den m� alts� gerne sp�rge b�de efter Id og ObjectId...