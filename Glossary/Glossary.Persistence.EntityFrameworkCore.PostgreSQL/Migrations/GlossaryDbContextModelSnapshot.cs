// <auto-generated />
using System;
using Glossary.Persistence.EntityFrameworkCore.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Glossary.Persistence.EntityFrameworkCore.PostgreSQL.Migrations
{
    [DbContext(typeof(GlossaryDbContext))]
    partial class GlossaryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Glossary.Domain.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Glossary.Domain.Entities.RecordAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("ObjectRecordId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubjectRecordId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ObjectRecordId");

                    b.HasIndex("SubjectRecordId");

                    b.ToTable("RecordAssociations");
                });

            modelBuilder.Entity("Glossary.Domain.Entities.RecordAssociation", b =>
                {
                    b.HasOne("Glossary.Domain.Entities.Record", "ObjectRecord")
                        .WithMany("SubjectRecords")
                        .HasForeignKey("ObjectRecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Glossary.Domain.Entities.Record", "SubjectRecord")
                        .WithMany("ObjectRecords")
                        .HasForeignKey("SubjectRecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ObjectRecord");

                    b.Navigation("SubjectRecord");
                });

            modelBuilder.Entity("Glossary.Domain.Entities.Record", b =>
                {
                    b.Navigation("ObjectRecords");

                    b.Navigation("SubjectRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
