// <auto-generated />
using System;
using Glossary.Persistence.EntityFrameworkCore.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Glossary.Persistence.EntityFrameworkCore.PostgreSQL.Migrations
{
    [DbContext(typeof(PRDbContext))]
    [Migration("20221017080410_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Glossary.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("Dead")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Glossary.Domain.Entities.PersonAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("ObjectPersonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubjectPersonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ObjectPersonId");

                    b.HasIndex("SubjectPersonId");

                    b.ToTable("PersonAssociations");
                });

            modelBuilder.Entity("Glossary.Domain.Entities.PersonAssociation", b =>
                {
                    b.HasOne("Glossary.Domain.Entities.Person", "ObjectPerson")
                        .WithMany("SubjectPeople")
                        .HasForeignKey("ObjectPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glossary.Domain.Entities.Person", "SubjectPerson")
                        .WithMany("ObjectPeople")
                        .HasForeignKey("SubjectPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjectPerson");

                    b.Navigation("SubjectPerson");
                });

            modelBuilder.Entity("Glossary.Domain.Entities.Person", b =>
                {
                    b.Navigation("ObjectPeople");

                    b.Navigation("SubjectPeople");
                });
#pragma warning restore 612, 618
        }
    }
}
