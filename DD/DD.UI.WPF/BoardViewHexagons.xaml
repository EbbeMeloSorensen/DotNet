<UserControl x:Class="DD.UI.WPF.BoardViewHexagons"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DD.UI.WPF"
             xmlns:utils="clr-namespace:Craft.UI.Utils;assembly=Craft.UI.Utils"
             xmlns:viewModel="clr-namespace:DD.ViewModel;assembly=DD.ViewModel"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Skins/MainSkin.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer x:Name="ScrollViewer"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto"
                  utils:Helpers.ScrollOffset="{Binding ScrollOffset}"
                  Loaded="ScrollViewer_OnLoaded"
                  SizeChanged="ScrollViewer_OnSizeChanged"
                  ScrollChanged="ScrollViewer_OnScrollChanged">
        <Grid Width="{Binding ImageWidth}"
              Height="{Binding ImageHeight}">

            <Canvas Background="White">
                <ItemsControl Width="{Binding BoardWidth}" 
                              Height="{Binding BoardHeight}"
                              ItemsSource="{Binding PixelViewModels1}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="{Binding Rows}"
                                         Columns="{Binding Columns}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Polygon Points="{Binding Points}" 
                                     Stroke="Gray" StrokeThickness="1" 
                                     Fill="{Binding Path=Pixel, Converter={StaticResource PixelToBrushConverter}}">
                            </Polygon>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Canvas>

            <Canvas>
                <ItemsControl Width="{Binding BoardWidth}" 
                              Height="{Binding BoardHeight}"
                              ItemsSource="{Binding PixelViewModels2}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="{Binding Rows}"
                                         Columns="{Binding Columns}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Polygon Points="{Binding Points}" 
                                     Stroke="Gray" StrokeThickness="1" 
                                     Fill="{Binding Path=Pixel, Converter={StaticResource PixelToBrushConverter}}">
                                <Polygon.RenderTransform>
                                    <TranslateTransform X="{Binding ShiftX}" 
                                                        Y="{Binding ShiftY}"/>
                                </Polygon.RenderTransform>
                            </Polygon>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Canvas>

            <Canvas>
                <ItemsControl ItemsSource="{Binding CreatureViewModels}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="viewModel:CreatureViewModel">
                            <local:CreatureView/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Grid x:Name="CurrentCreatureGrid"
                  Canvas.Left="{Binding CurrentCreatureViewModel.Left}"
                  Canvas.Top="{Binding CurrentCreatureViewModel.Top}">
                    <local:CreatureView DataContext="{Binding CurrentCreatureViewModel}"/>
                    <Grid.RenderTransform>
                        <TranslateTransform X="0" Y="0"/>
                    </Grid.RenderTransform>
                    <b:Interaction.Triggers>
                        <b:DataTrigger Binding="{Binding MoveCreatureAnimationRunning, Mode=OneWay}" 
                                    Value="true">
                            <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                <b:ControlStoryboardAction.Storyboard>
                                    <Storyboard Completed="MoveCreatureStoryboard_Completed">
                                        <DoubleAnimationUsingPath Storyboard.TargetName="CurrentCreatureGrid"
                                                              Storyboard.TargetProperty="(RenderTransform).X"
                                                              Duration="{Binding DurationForMoveCreatureAnimation}"
                                                              Source="X">
                                            <DoubleAnimationUsingPath.PathGeometry>
                                                <PathGeometry Figures="{Binding CreaturePath}"/>
                                            </DoubleAnimationUsingPath.PathGeometry>
                                        </DoubleAnimationUsingPath>
                                        <DoubleAnimationUsingPath Storyboard.TargetName="CurrentCreatureGrid"
                                                              Storyboard.TargetProperty="(RenderTransform).Y"
                                                              Duration="{Binding DurationForMoveCreatureAnimation}"
                                                              Source="Y">
                                            <DoubleAnimationUsingPath.PathGeometry>
                                                <PathGeometry Figures="{Binding CreaturePath}"/>
                                            </DoubleAnimationUsingPath.PathGeometry>
                                        </DoubleAnimationUsingPath>
                                    </Storyboard>
                                </b:ControlStoryboardAction.Storyboard>
                            </b:ControlStoryboardAction>
                        </b:DataTrigger>
                    </b:Interaction.Triggers>
                </Grid>

                <Grid x:Name="WeaponGrid"
                      Canvas.Left="{Binding WeaponViewModel.Left}"
                      Canvas.Top="{Binding WeaponViewModel.Top}"
                      Visibility="{Binding WeaponViewModel.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Image Height="{Binding WeaponViewModel.Diameter}" 
                       Width="{Binding WeaponViewModel.Diameter}"
                       Source="{Binding Path=WeaponImagePath,
                            UpdateSourceTrigger=PropertyChanged, 
                            Converter={StaticResource ImagePathConverter}}">
                        <Image.RenderTransform>
                            <RotateTransform x:Name="RotateTransform" CenterX="37.5" CenterY="37.5" Angle="{Binding WeaponViewModel.RotationAngle}"/>
                        </Image.RenderTransform>
                    </Image>
                    <Grid.RenderTransform>
                        <TranslateTransform X="0" Y="0"/>
                    </Grid.RenderTransform>
                    <b:Interaction.Triggers>
                        <b:DataTrigger Binding="{Binding AttackAnimationRunning, Mode=OneWay}" 
                                   Value="true">
                            <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                <b:ControlStoryboardAction.Storyboard>
                                    <Storyboard Completed="AttackStoryboard_Completed">
                                        <DoubleAnimation Storyboard.TargetName="WeaponGrid"
                                                     Storyboard.TargetProperty="(RenderTransform).X"
                                                     To="{Binding TranslationX}"
                                                     AutoReverse="{Binding WeaponAutoReverse}"
                                                     Duration="{Binding DurationForAttackAnimation}"/>
                                        <DoubleAnimation Storyboard.TargetName="WeaponGrid"
                                                     Storyboard.TargetProperty="(RenderTransform).Y"
                                                     To="{Binding TranslationY}" 
                                                     AutoReverse="{Binding WeaponAutoReverse}"
                                                     Duration="{Binding DurationForAttackAnimation}"/>
                                    </Storyboard>
                                </b:ControlStoryboardAction.Storyboard>
                            </b:ControlStoryboardAction>
                        </b:DataTrigger>
                    </b:Interaction.Triggers>
                </Grid>

            </Canvas>

        </Grid>
    </ScrollViewer>
</UserControl>
