// <auto-generated />
using System;
using DMI.SMS.Persistence.EntityFrameworkCore.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMI.SMS.Persistence.EntityFrameworkCore.SqlServer.Migrations
{
    [DbContext(typeof(SMSDbContext))]
    [Migration("20220315075530_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DMI.SMS.Domain.Entities.StationInformation", b =>
                {
                    b.Property<int>("GdbArchiveOid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gdb_archive_oid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GdbArchiveOid"), 1L, 1);

                    b.Property<string>("AccessAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("accessaddress");

                    b.Property<DateTime?>("Addworkforcedate")
                        .HasColumnType("datetime2")
                        .HasColumnName("addworkforcedate");

                    b.Property<string>("Altstationid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("altstationid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<int?>("Country")
                        .HasColumnType("int")
                        .HasColumnName("country");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_user");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("datefrom");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateto");

                    b.Property<string>("Facilityid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("facilityid");

                    b.Property<DateTime>("GdbFromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("gdb_from_date");

                    b.Property<DateTime>("GdbToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("gdb_to_date");

                    b.Property<string>("GlobalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("globalid");

                    b.Property<double?>("Hha")
                        .HasColumnType("float")
                        .HasColumnName("hha");

                    b.Property<double?>("Hhp")
                        .HasColumnType("float")
                        .HasColumnName("hhp");

                    b.Property<DateTime?>("LastEditedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_edited_date");

                    b.Property<string>("LastEditedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_edited_user");

                    b.Property<DateTime?>("Lastservicedate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastservicedate");

                    b.Property<DateTime?>("Lastvisitdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastvisitdate");

                    b.Property<DateTime?>("Nextservicedate")
                        .HasColumnType("datetime2")
                        .HasColumnName("nextservicedate");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("objectid");

                    b.Property<string>("Referencetomaintenanceagreement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("referencetomaintenanceagreement");

                    b.Property<string>("Regionid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("regionid");

                    b.Property<int?>("Serviceinterval")
                        .HasColumnType("int")
                        .HasColumnName("serviceinterval");

                    b.Property<string>("Shape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Si_easting")
                        .HasColumnType("float")
                        .HasColumnName("si_easting");

                    b.Property<double?>("Si_geo_lat")
                        .HasColumnType("float")
                        .HasColumnName("si_geo_lat");

                    b.Property<double?>("Si_geo_long")
                        .HasColumnType("float")
                        .HasColumnName("si_geo_long");

                    b.Property<double?>("Si_northing")
                        .HasColumnType("float")
                        .HasColumnName("si_northing");

                    b.Property<int?>("Si_utm")
                        .HasColumnType("int")
                        .HasColumnName("si_utm");

                    b.Property<int?>("StationIDDMI")
                        .HasColumnType("int")
                        .HasColumnName("stationid_dmi");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stationname");

                    b.Property<int?>("StationOwner")
                        .HasColumnType("int")
                        .HasColumnName("stationOwner");

                    b.Property<string>("Stationid_icao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stationid_icao");

                    b.Property<int?>("Stationtype")
                        .HasColumnType("int")
                        .HasColumnName("stationtype");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<double?>("Wgs_lat")
                        .HasColumnType("float")
                        .HasColumnName("wgs_lat");

                    b.Property<double?>("Wgs_long")
                        .HasColumnType("float")
                        .HasColumnName("wgs_long");

                    b.Property<string>("Wigosid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("wigosid");

                    b.Property<string>("Wmocountrycode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("wmocountrycode");

                    b.Property<int?>("Wmorbcn")
                        .HasColumnType("int")
                        .HasColumnName("wmorbcn");

                    b.Property<int?>("Wmorbsn")
                        .HasColumnType("int")
                        .HasColumnName("wmorbsn");

                    b.Property<int?>("Wmorbsnradio")
                        .HasColumnType("int")
                        .HasColumnName("wmorbsnradio");

                    b.Property<string>("Wmostationid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("wmostationid");

                    b.HasKey("GdbArchiveOid");

                    b.ToTable("StationInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
